create_proposal(int id){
deal_data = zoho.crm.getRecordById("Deals",id);
school = deal_data.get("Account_Name").get("name");
folder_id = deal_data.get("Folder_ID");
deal_name = deal_data.get("Deal_Name");
year_levels = deal_data.get("Year_Levels");
// program_style = deal_data.get("Program_Style");
time = zoho.currenttime.getTime("12","false");
bookingForms = "https://creatorapp.zohopublic.com/sustainableadventuresptyltd/proposal/form-embed/Proposals/GJAeQ3SEjff8tTU7hn1NpRW7ZQN7n8ADAbG7S2PQbdSR5MWBN0rvPSgQQdxOr6E7jTf9V89JX8GmmtSxT7YHAfFpBuRj4wC1Ukha?Deal_ID=" + id;
dataMap = Map();
dataMap.put("Booking_Form_URL",bookingForms);
update = zoho.crm.updateRecord("Deals",id,dataMap);
// bookingForm = deal_data.get("Booking_Form_URL");
values_map = Map();
dateString = toString(zoho.currentdate,"dd MMM yyyy");
dateYear = dateString.getYear();
values_map.put("Account_Name",school);
values_map.put("Deal_Name",deal_name);
values_map.put("Year_Levels",year_levels);
values_map.put("Date",dateString);
values_map.put("Booking_URL",bookingForms);
// // Construct a KEY-VALUE variable to hold the output settings
output_settings = Map();
output_settings.put("doc_name",school + " (Camp " + year_levels + ") " + dateString);
output_settings.put("folder_id",folder_id);
// info values_map;
// response = zoho.writer.mergeAndStore("q3p6y58d1c07d7af345c7a0aa5cf64f0dd2e8",values_map,output_settings,"zoho_writer_connection");
// info response;
// zoho.crm.updateRecord("Deals",id,{"Proposal_URL":"https://writer.zoho.com/writer/open/" + response.get("document_id")});
// info zoho.writer.getMergeFields("q3p6y58d1c07d7af345c7a0aa5cf64f0dd2e8","zoho_writer_connection");
camps = zoho.crm.getRelatedRecords("Camps","Deals",id);
camp_5 = list();
camp_6 = list();
camp_7 = list();
camp_8 = list();
camp_9 = list();
camp_10 = list();
camp_11 = list();
act5 = list();
act6 = list();
act7 = list();
act8 = list();
act9 = list();
act10 = list();
act11 = list();
for each  camp in camps
{
	camp = zoho.crm.getRecordById("Camps",camp.get("id"));
	year_level = camp.get("Year_Level");
	activities = camp.get("Related_Camp_Activities");
	fixedCost = camp.get("Fixed_Cost_Activities");
	costStudent = camp.get("Cost_Per_Student");
	total = camp.get("Camp_Activity_Cost");
	totalFixed = camp.get("Total_Fixed_Cost");
	totalAll = camp.get("Total_Cost1");
	programStyle = camp.get("Program_Style");
	if(camp.get("Stage") != "Ready for Proposal")
	{
		return "Warning:Some Camps are not ready for proposal!";
		break;
	}
	// 	program_location = deal_data.get("Program_Style");
	// 	subNumStud = activities.get("Number_of_Student1").toLong();
	// 	total = activities.get("Subtotal").toLong();
	for each  activity in activities
	{
		activity_name = activity.get("Activity_Name").get("name");
		info activity.get("Activity_Check");
		if(year_level == "Year 5")
		{
			info "year 5";
			subNumStud = camp.get("Number_of_Students");
			totalCost = activity.get("Cost") * subNumStud;
			perStudent = (totalAll / subNumStud).round(2);
			item = Map();
			item.put("Camp_5.Activity_Name",activity_name);
			item.put("Camp_5.Description",activity.get("Description"));
			item.put("Camp_5.Unit_Cost",activity.get("Cost"));
			item.put("Camp_5.Number_of_Students",subNumStud);
			item.put("Camp_5.Total_Cost",totalCost);
			values_map.put("Camp_5_Total",total);
			values_map.put("Camp_5_perStudent",perStudent);
			values_map.put("Year_5_Level",year_level);
			values_map.put("Year_5_Num_Students",camp.get("Number_of_Students"));
			values_map.put("Year_5_Camp_Groups",camp.get("Number_of_Groups"));
			values_map.put("Year_5_Num_Teachers",camp.get("Number_of_Teachers"));
			values_map.put("Year_5_Program_Style",programStyle.toString());
			values_map.put("Year_5_Program_Location",camp.get("Camp_Locations"));
			values_map.put("Camp_5_Total_Fixed",totalFixed);
			values_map.put("Camp_5_Total_Cost",totalAll);
			values_map.put("Camp_5_Duration",camp.get("Number_of_Days"));
			if(activity.get("Activity_Check") == true)
			{
				act5.add(activity.get("Activity_Name").get("name"));
				values_map.put("Camp_5_Activities",act5);
			}
			info act5;
			camp_5.add(item);
		}
		else if(year_level == "Year 6")
		{
			info "year 6";
			subNumStud = camp.get("Number_of_Students");
			totalCost = activity.get("Cost") * subNumStud;
			perStudent = (totalAll / subNumStud).round(2);
			item = Map();
			item.put("Camp_6.Activity_Name",activity_name);
			item.put("Camp_6.Description",activity.get("Description"));
			item.put("Camp_6.Unit_Cost",activity.get("Cost"));
			item.put("Camp_6.Number_of_Students",subNumStud);
			item.put("Camp_6.Total_Cost",totalCost);
			values_map.put("Camp_6_Total",total);
			values_map.put("Camp_6_perStudent",perStudent);
			values_map.put("Year_6_Level",year_level);
			values_map.put("Year_6_Num_Students",camp.get("Number_of_Students"));
			values_map.put("Year_6_Camp_Groups",camp.get("Number_of_Groups"));
			values_map.put("Year_6_Num_Teachers",camp.get("Number_of_Teachers"));
			values_map.put("Year_6_Program_Style",programStyle.toString());
			values_map.put("Year_6_Program_Location",camp.get("Camp_Locations"));
			values_map.put("Camp_6_Total_Fixed",totalFixed);
			values_map.put("Camp_6_Total_Cost",totalAll);
			values_map.put("Camp_6_Duration",camp.get("Number_of_Days"));
			if(activity.get("Activity_Check") == true)
			{
				act6.add(activity.get("Activity_Name").get("name"));
				values_map.put("Camp_6_Activities",act6);
			}
			info act6;
			camp_6.add(item);
		}
		else if(year_level == "Year 7")
		{
			info "year 7";
			subNumStud = camp.get("Number_of_Students");
			totalCost = activity.get("Cost") * subNumStud;
			perStudent = (totalAll / subNumStud).round(2);
			item = Map();
			item.put("Camp_7.Activity_Name",activity_name);
			item.put("Camp_7.Description",activity.get("Description"));
			item.put("Camp_7.Unit_Cost",activity.get("Cost"));
			item.put("Camp_7.Number_of_Students",subNumStud);
			item.put("Camp_7.Total_Cost",totalCost);
			values_map.put("Camp_7_Total",total);
			values_map.put("Camp_7_perStudent",perStudent);
			values_map.put("Year_7_Level",year_level);
			values_map.put("Year_7_Num_Students",camp.get("Number_of_Students"));
			values_map.put("Year_7_Camp_Groups",camp.get("Number_of_Groups"));
			values_map.put("Year_7_Num_Teachers",camp.get("Number_of_Teachers"));
			values_map.put("Year_7_Program_Style",programStyle.toString());
			values_map.put("Year_7_Program_Location",camp.get("Camp_Locations"));
			values_map.put("Camp_7_Total_Fixed",totalFixed);
			values_map.put("Camp_7_Total_Cost",totalAll);
			values_map.put("Camp_7_Duration",camp.get("Number_of_Days"));
			if(activity.get("Activity_Check") == true)
			{
				act7.add(activity.get("Activity_Name").get("name"));
				values_map.put("Camp_7_Activities",act7);
			}
			info act7;
			camp_7.add(item);
		}
		else if(year_level == "Year 8")
		{
			info "year 8";
			subNumStud = camp.get("Number_of_Students");
			totalCost = activity.get("Cost") * subNumStud;
			perStudent = (totalAll / subNumStud).round(2);
			item = Map();
			item.put("Camp_8.Activity_Name",activity_name);
			item.put("Camp_8.Description",activity.get("Description"));
			item.put("Camp_8.Unit_Cost",activity.get("Cost"));
			item.put("Camp_8.Number_of_Students",subNumStud);
			item.put("Camp_8.Total_Cost",totalCost);
			values_map.put("Camp_8_Total",total);
			values_map.put("Camp_8_perStudent",perStudent);
			values_map.put("Year_8_Level",year_level);
			values_map.put("Year_8_Num_Students",camp.get("Number_of_Students"));
			values_map.put("Year_8_Camp_Groups",camp.get("Number_of_Groups"));
			values_map.put("Year_8_Num_Teachers",camp.get("Number_of_Teachers"));
			values_map.put("Year_8_Program_Style",programStyle.toString());
			values_map.put("Year_8_Program_Location",camp.get("Camp_Locations"));
			values_map.put("Camp_8_Total_Fixed",totalFixed);
			values_map.put("Camp_8_Total_Cost",totalAll);
			values_map.put("Camp_8_Duration",camp.get("Number_of_Days"));
			if(activity.get("Activity_Check") == true)
			{
				act8.add(activity.get("Activity_Name").get("name"));
				values_map.put("Camp_8_Activities",act8);
			}
			info act8;
			camp_8.add(item);
		}
		else if(year_level == "Year 9")
		{
			info "year 9";
			subNumStud = camp.get("Number_of_Students");
			totalCost = activity.get("Cost") * subNumStud;
			perStudent = (totalAll / subNumStud).round(2);
			item = Map();
			item.put("Camp_9.Activity_Name",activity_name);
			item.put("Camp_9.Description",activity.get("Description"));
			item.put("Camp_9.Unit_Cost",activity.get("Cost"));
			item.put("Camp_9.Number_of_Students",subNumStud);
			item.put("Camp_9.Total_Cost",totalCost);
			values_map.put("Camp_9_Total",total);
			values_map.put("Camp_9_perStudent",perStudent);
			values_map.put("Year_9_Level",year_level);
			values_map.put("Year_9_Num_Students",camp.get("Number_of_Students"));
			values_map.put("Year_9_Camp_Groups",camp.get("Number_of_Groups"));
			values_map.put("Year_9_Num_Teachers",camp.get("Number_of_Teachers"));
			values_map.put("Year_9_Program_Style",programStyle.toString());
			values_map.put("Year_9_Program_Location",camp.get("Camp_Locations"));
			values_map.put("Camp_9_Total_Fixed",totalFixed);
			values_map.put("Camp_9_Total_Cost",totalAll);
			values_map.put("Camp_9_Duration",camp.get("Number_of_Days"));
			if(activity.get("Activity_Check") == true)
			{
				act9.add(activity.get("Activity_Name").get("name"));
			}
			info act9;
			values_map.put("Camp_9_Activities",act9);
			camp_9.add(item);
		}
		else if(year_level == "Year 10")
		{
			info "year 10";
			subNumStud = camp.get("Number_of_Students");
			totalCost = activity.get("Cost") * subNumStud;
			perStudent = (totalAll / subNumStud).round(2);
			item = Map();
			item.put("Camp_10.Activity_Name",activity_name);
			item.put("Camp_10.Description",activity.get("Description"));
			item.put("Camp_10.Unit_Cost",activity.get("Cost"));
			item.put("Camp_10.Number_of_Students",subNumStud);
			item.put("Camp_10.Total_Cost",totalCost);
			values_map.put("Camp_10_Total",total);
			values_map.put("Camp_10_perStudent",perStudent);
			values_map.put("Year_10_Level",year_level);
			values_map.put("Year_10_Num_Students",camp.get("Number_of_Students"));
			values_map.put("Year_10_Camp_Groups",camp.get("Number_of_Groups"));
			values_map.put("Year_10_Num_Teachers",camp.get("Number_of_Teachers"));
			values_map.put("Year_10_Program_Style",programStyle.toString());
			values_map.put("Year_10_Program_Location",camp.get("Camp_Locations"));
			values_map.put("Camp_10_Total_Fixed",totalFixed);
			values_map.put("Camp_10_Total_Cost",totalAll);
			values_map.put("Camp_10_Duration",camp.get("Number_of_Days"));
			if(activity.get("Activity_Check") == true)
			{
				act10.add(activity.get("Activity_Name").get("name"));
			}
			info act10;
			values_map.put("Camp_10_Activities",act10);
			camp_10.add(item);
		}
		else if(year_level == "Year 11")
		{
			info "year 11";
			subNumStud = camp.get("Number_of_Students");
			totalCost = activity.get("Cost") * subNumStud;
			perStudent = (totalAll / subNumStud).round(2);
			item = Map();
			item.put("Camp_11.Activity_Name",activity_name);
			item.put("Camp_11.Description",activity.get("Description"));
			item.put("Camp_11.Unit_Cost",activity.get("Cost"));
			item.put("Camp_11.Number_of_Students",subNumStud);
			item.put("Camp_11.Total_Cost",totalCost);
			values_map.put("Camp_11_Total",total);
			values_map.put("Camp_11_perStudent",perStudent);
			values_map.put("Year_11_Level",year_level);
			values_map.put("Year_11_Num_Students",camp.get("Number_of_Students"));
			values_map.put("Year_11_Camp_Groups",camp.get("Number_of_Groups"));
			values_map.put("Year_11_Num_Teachers",camp.get("Number_of_Teachers"));
			values_map.put("Year_11_Program_Style",programStyle.toString());
			values_map.put("Year_11_Program_Location",camp.get("Camp_Locations"));
			values_map.put("Camp_11_Total_Fixed",totalFixed);
			values_map.put("Camp_11_Total_Cost",totalAll);
			values_map.put("Camp_11_Duration",camp.get("Number_of_Days"));
			if(activity.get("Activity_Check") == true)
			{
				act11.add(activity.get("Activity_Name").get("name"));
			}
			info act11;
			values_map.put("Camp_11_Activities",act11);
			camp_11.add(item);
		}
	}
	if(fixedCost.size() != null)
	{
		info "fixCost";
		for each  fixed in fixedCost
		{
			activity_name1 = fixed.get("Activity_Name1").get("name");
			if(year_level == "Year 5")
			{
				item = Map();
				item.put("Camp_5.Activity_Name",activity_name1);
				item.put("Camp_5.Description",fixed.get("Description1"));
				item.put("Camp_5.Unit_Cost",fixed.get("Cost1"));
				item.put("Camp_5.Total_Cost",fixed.get("Cost1"));
				camp_5.add(item);
			}
			if(year_level == "Year 6")
			{
				item = Map();
				item.put("Camp_6.Activity_Name",activity_name1);
				item.put("Camp_6.Description",fixed.get("Description1"));
				item.put("Camp_6.Unit_Cost",fixed.get("Cost1"));
				item.put("Camp_6.Total_Cost",fixed.get("Cost1"));
				camp_6.add(item);
			}
			if(year_level == "Year 7")
			{
				item = Map();
				item.put("Camp_7.Activity_Name",activity_name1);
				item.put("Camp_7.Description",fixed.get("Description1"));
				item.put("Camp_7.Unit_Cost",fixed.get("Cost1"));
				item.put("Camp_7.Total_Cost",fixed.get("Cost1"));
				camp_7.add(item);
			}
			if(year_level == "Year 8")
			{
				item = Map();
				item.put("Camp_8.Activity_Name",activity_name1);
				item.put("Camp_8.Description",fixed.get("Description1"));
				item.put("Camp_8.Unit_Cost",fixed.get("Cost1"));
				item.put("Camp_8.Total_Cost",fixed.get("Cost1"));
				camp_8.add(item);
			}
			if(year_level == "Year 9")
			{
				item = Map();
				item.put("Camp_9.Activity_Name",activity_name1);
				item.put("Camp_9.Description",fixed.get("Description1"));
				item.put("Camp_9.Unit_Cost",fixed.get("Cost1"));
				item.put("Camp_9.Total_Cost",fixed.get("Cost1"));
				camp_9.add(item);
			}
			if(year_level == "Year 10")
			{
				item = Map();
				item.put("Camp_10.Activity_Name",activity_name1);
				item.put("Camp_10.Description",fixed.get("Description1"));
				item.put("Camp_10.Unit_Cost",fixed.get("Cost1"));
				item.put("Camp_10.Total_Cost",fixed.get("Cost1"));
				camp_10.add(item);
			}
			if(year_level == "Year 11")
			{
				item = Map();
				item.put("Camp_11.Activity_Name",activity_name1);
				item.put("Camp_11.Description",fixed.get("Description1"));
				item.put("Camp_11.Unit_Cost",fixed.get("Cost1"));
				item.put("Camp_11.Total_Cost",fixed.get("Cost1"));
				camp_11.add(item);
			}
		}
	}
}
values_map.put("Camp_5",camp_5);
values_map.put("Camp_6",camp_6);
values_map.put("Camp_7",camp_7);
values_map.put("Camp_8",camp_8);
values_map.put("Camp_9",camp_9);
values_map.put("Camp_10",camp_10);
values_map.put("Camp_11",camp_11);
response = zoho.writer.mergeAndStore("q3p6y58d1c07d7af345c7a0aa5cf64f0dd2e8",values_map,output_settings,"zoho_writer_connection");
zoho.crm.updateRecord("Deals",id,{"Proposal_URL":"https://writer.zoho.com/writer/open/" + response.get("document_id")});
docId = response.get("document_id");
values_map = Map();
// Construct a KEY-VALUE variable to hold the output settings
output_settings = Map();
output_settings.put("doc_name",school + " (Camp " + year_levels + ") " + dateString);
output_settings.put("folder_id",deal_data.get("Folder_ID"));
output_settings.put("output_format","pdf");
// Perform the Merge and store task
response = zoho.writer.mergeAndStore(docId,values_map,output_settings,"zoho_writer_connection");
docuemnt_id = response.get("document_id");
header = Map();
header.put("Accept","application/vnd.api+json");
data = Map();
data_param1 = Map();
att_param1 = Map();
att_param1.put("resource_id",docuemnt_id);
att_param1.put("shared_type","everyone");
att_param1.put("role_id","34");
data_param1.put("attributes",att_param1);
data_param1.put("type","permissions");
data.put("data",data_param1);
response = invokeurl
[
	url :"https://www.zohoapis.com/workdrive/api/v1/permissions"
	type :POST
	parameters:data.toString()
	headers:header
	connection:"workdrive_connection"
];
update_deal_data = {"Proposal_PDF_URL":response.get("data").get("attributes").get("permalink"),"PDF_ID":docuemnt_id,"Stage":"Proposal Created"};
zoho.crm.updateRecord("Deals",id,update_deal_data,{"trigger":{"workflow"}});
return "Proposal Created!";
}
